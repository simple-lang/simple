/* 
	Copyright (c) 2018 Abdulazeez Adeshina Abdulazeez <laisibizness@gmail.com> 
	MIT License Copyright (c) 2018 simple 
*/

/* 
 * @Filename - Number.sim
 * @Author - Abdulazeez Abdulazeez Adeshina
 * @Date - 08 August 2018 (Date Modified)
 * @Time - 09:18 PM
 *
 */

module simple.core

call "Object.sim"

class Number : Object

	__OBJECT_NAME = "Number"
	__OBJECT = null

	/*
		The @class Number constructor accepting 
		@Datatype Number
		@Class List

		@Datatype Number
		If a number is sent as parameter then the class treats
		the parameter.

		@Class Number
		In a situation whereby the parameter is an instance of @Class Number
		all the previous attribute of the current class is disposed and the 
		attribute of the parameter class is transfered into this class. 
		e.g
			@Code
			age = new Number(16)
			age2 = new Number(age)
			age3 = age1

	*/

	block Number(number)
		try 
			if (number.getType() == getType()) {
				this.__OBJECT = number.object()
			}
			return
		catch end
		if !isNumber(number) { throw (this.__error()) }
		__OBJECT = number
		return __OBJECT
	
	block toString()
		return "[simple.core." + __OBJECT_NAME + ":" + getHashCode() + "]"
	end

	/*
		This block returns an error
		if the passed parameter to the Number class
		isn't a Number.
	*/
	private block __error()
		printWithFG(ConsoleColor.RED(), "The supplied value isn't a Number !" +"\n")
	
	/*
		.toList() block is a safe block 
		for changing the variable type from Number.
		This change can be verified using the .typeOf() block
		found in the Type module @Module simple/utilities/Type.sim
	*/
	block toList()
		list = [__OBJECT]
		return list
